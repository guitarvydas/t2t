// swib instructions lisp 2 python
swibasm {
  main [script+] = ‛«script»’
  script [lb ws _script ws2+ name ws3 instruction+ rb ws4] = ‛\n{"script":"«name»","body":[⤷«instruction»⤶\n]}\n’
  instruction_enter [lb op ws name ws2 rb ws3] = ‛\n{"op":"enter","arg":"«name»"},’
  instruction_exit [lb op ws name ws2 rb ws3] = ‛\n{"op":"exit","arg":"«name»"},’
  instruction_op0 [lb op rb ws2] = ‛\n{"op":"«op»"},’
  instruction_opN [lb op ws+ n ws2 rb ws3] = ‛\n{"op":"«op»","arg":«n»},’
  instruction_sendaccumulator [lb op ws+ p ws2 rb ws3] = ‛\n{"op":"send-accumulator","port":«p»},’
  instruction_sendstring [lb op ws+ s ws2 p ws3 rb ws4] = ‛\n{"op":"send-string","arg":«s»,"port":«p»},’
  instruction_call [lb op ws name ws2 yn ws3 rb ws4] = ‛\n{"op":"call","arg":"«name»",⤷«yn»⤶},’
  instruction_peek [lb op ws s ws2 yn ws3 rb ws4] = ‛\n{"op":"peek","arg":"«s»",⤷«yn»⤶},’
  instruction_peekend [lb op ws yn ws3 rb ws4] = ‛\n{"op":"peekend",⤷«yn»⤶},’
  instruction_cycle [lb op ws i+ rb ws2] = ‛\n{"op":"cycle","body":[⤷«i»⤶\n]},’

  op0 [op] = ‛«op»’
  opN [op] = ‛«op»’

  yesno [y n] = ‛\n"✓":[⤷«y»⤶\n],\n"✗":[⤷«n»⤶\n]’
  yes [lb _ ws2 i+ rb ws3] = ‛«i»’
  no [lb _ ws2 i+ rb ws3] = ‛«i»’

  name [n] = ‛«n»’
  port [p] = ‛«p»’
  
  string [dq1 cs* dq2] = ‛«dq1»«cs»«dq2»’
  dq [q] = ‛«q»’
  symbol [cs+] = ‛«cs»’
  integer [ds+] = ‛«ds»’

  keyword [x] = ‛«x»’
  kw [s] = ‛«s»’
}
