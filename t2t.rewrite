% rewrite t2t {
  main [parameterDefs* rewriteDef] = ‛«parameterDefs»«rewriteDef»’

  parameterDef [_pct _1 _parameter _2 name _3] = ‛«_pct»«_1»«_parameter»«_2»«name»«_3»’
  rewriteDef [ _pct _1 _rewrite _2 name _3 _lb _4 rewriteRules+ _5 rb _6] = ‛{«rewriteRules»}’

  rewriteRule [ruleName _1 lb _2 argDefs* _3s* rb _4 _eq _5 rewriteScope _6] = ‛\n«ruleName» : function («argDefs») {\n«rewriteScope»},’

  argDef_parenthesized [lp names+ _1s+ rp op] = ‛«lp»«names»«_1s»«rp»«op».’
  argDef_iter [name op] = ‛«name»«op»,’
  argDef_plain [name] = ‛«name»,’

  rewriteScope_scope [lb _1 binding _2 rewriteScope _3 rb] = ‛«rewriteScope»’
  rewriteScope_plain [s] = ‛«s»’

  binding_call [lb _1 name _2 rewriteFormatString _3 rb] = ‛«lb»«_1»«name»«_2»«rewriteFormatString»«_3»«rb»’
  binding_parameterAssignment [name _1 _eq _2 rewriteFormatString] = ‛«name»«_1»«_eq»«_2»«rewriteFormatString»’

  rewriteFormatString [lq formatItems* rq] = ‛«lq»«formatItems»«rq»’
  formatItem_supportCall [lb _1 name _2 rewriteFormatStrings+ _3s+ rb] = ‛«lb»«_1»«name»«_2»«rewriteFormatStrings»«_3s»«rb»’
  formatItem_parameter [lb parameterRef rb] = ‛«lb»«parameterRef»«rb»’
  formatItem_arg [lb argRef rb] = ‛«lb»«argRef»«rb»’
  formatItem_escapedCharacter [bslash any] = ‛«bslash»«any»’
  formatItem_rawCharacter [c] = ‛«c»’

  argRef [name] = ‛«name».rwr ()’
  parameterRef [name] = ‛_.top («name»_stack)’
  
  ruleName [name] = ‛«name»’

  name [nameFirst nameRests*] = ‛«nameFirst»«nameRests»’
  nameFirst [c] = ‛«c»’
  nameRest [c] = ‛«c»’

  s_ [space*] = ‛«space»’
}
