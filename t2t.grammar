t2t {
  main = parameterDef* rewriteDef

  parameterDef = "%" ws "parameter" ws name ws
  rewriteDef = "%" ws "rewrite" ws name ws "{" ws rewriteRule+ ws "}" ws

  rewriteRule = ruleName ws "[" ws (argDef ws)* "]" ws "=" ws rewriteScope ws

  argDef = (parenthesizedIterArgDef | iterArgDef | plainArgDef)

  parenthesizedIterArgDef = "(" (plainArgDef ws)+ ")" ("+" | "*" | "?")
  iterArgDef = name ("+" | "*" | "?")
  plainArgDef = name

  ruleName = name

  argRef = name
  parameterRef = name

  rewriteScope =
    | "⎡" ws (supportCall | parameterAssignment) ws rewriteScope ws "⎦" -- scope
    | rewriteFormatString                                            -- raw
  
  supportCall = "⎨" ws name ws rewriteFormatString ws "⎬" 
  parameterAssignment = name ws "=" ws rewriteFormatString

  rewriteFormatString = "‛" formatChar* "’"
  formatChar =
    | "⎨" ws name ws rewriteFormatString ws "⎬"   -- supportCall
    | "⟪" parameterRef "⟫"                        -- parameter
    | "«" argRef "»"                              -- arg
    | "\\" any                                    -- escaped
    | ~"‛" ~"’" ~"⎡" ~"⎦" ~"⟪" ~"⟫" ~"«" ~"»" any -- rawwscharacter

  name (a name)
    = nameFirst nameRest*
  nameFirst
    = "ws"
    | letter
  nameRest
    = "ws"
    | alnum

  ws = spaces

}
