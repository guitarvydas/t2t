node t2t.mjs t2t.grammar t2t.rewrite >dev.t2t.mjs
// *** 1 ***
_r = {

    Main : function (c,) {
	return `hello world ${c.rwr ()}`;
    },
}
// *** 2 ***
_r = {
    paramA : [],
    paramB : [],
    paramC : [],

    Main : function (a,(_semisb )+.c,d+,) {
	print (`pre down a=${a.rwr ()} _semis=${_semis.rwr ()} b=${b.rwr ()} c=${c.rwr ()} d=${d.rwr ()}`);
	_.set_top (paramA_stack, `${a.rwr ()}`);
	_.set_top (paramB_stack, `${b.rwr ()}`);
	_.set_top (paramC_stack, `${c.rwr ()}`);
	print (`hello`);
	return `... print2 (`middle``2nd arg`) ${a.rwr ()}${_semis.rwr ()}${_.top (_r.paramB_stack)}${c.rwr ()}${d.rwr ()}...`;
    },
}
// *** 3 ***
_r = {
    previous : [],

    Main : function (w,inner,) {
	_.set_top (previous_stack, `${w.rwr ()}`);
	return `${inner.rwr ()}`;
    },
    Inner : function (m,) {
	return `${_.top (_r.previous_stack)}...${m.rwr ()}`;
    },
}
